# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{controller}
# Include{replicas}
# Include{replica1}
# Include{controllerExpertExtraArgs}
  - variable: secretEnv
    group: "App Configuration"
    label: "Image Secrets"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: ZIGBEE2MQTT_CONFIG_MQTT_USER
          label: "MQTT User"
          description: "This will override the specific value of config file. Leave empty if you plan to use custom config or you don't have set a user on your MQTT broker."
          schema:
            type: string
            default: ""
        - variable: ZIGBEE2MQTT_CONFIG_MQTT_PASSWORD
          label: "MQTT Password"
          description: "This will override the specific value of config file. Leave empty if you plan to use custom config or you don't have set a password on your MQTT broker."
          schema:
            type: string
            private: true
            default: ""
  - variable: env
    group: "App Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: USE_CUSTOM_CONFIG_FILE
          label: "ADVANCED: Use custom config file (Placed in /data)"
          description: ""
          schema:
            type: boolean
            default: false
            show_subquestions_if: false
            subquestions:
              - variable: ZIGBEE2MQTT_CONFIG_PERMIT_JOIN
                label: "ZIGBEE2MQTT_CONFIG_PERMIT_JOIN"
                description: "This will override the specific value of config file"
                schema:
                  type: boolean
                  default: true
              - variable: ZIGBEE2MQTT_CONFIG_EXPIRIMENTAL_NEW_API
                label: "ZIGBEE2MQTT_CONFIG_EXPIRIMENTAL_NEW_API"
                description: "This will override the specific value of config file"
                schema:
                  type: boolean
                  default: true
              - variable: ZIGBEE2MQTT_CONFIG_MQTT_SERVER
                label: "MQTT Server"
                description: "This will override the specific value of config file"
                schema:
                  type: string
                  required: true
                  default: "mqtt://mqtt.ix-mqtt.svc.cluster.local"
              - variable: ZIGBEE2MQTT_CONFIG_MQTT_BASE_TOPIC
                label: "MQTT Base Topic"
                description: "This will override the specific value of config file"
                schema:
                  type: string
                  required: true
                  default: "zigbee2mqtt"
              - variable: ZIGBEE2MQTT_CONFIG_SERIAL_PORT
                label: "ZIGBEE2MQTT_CONFIG_SERIAL_PORT"
                description: "This will override the specific value of config file"
                schema:
                  type: string
                  required: true
                  default: "/dev/ttyUSB0"
              - variable: ZIGBEE2MQTT_CONFIG_SERIAL_ADAPTER
                label: "Serial Adapter Type"
                description: "This will override the specific value of config file"
                schema:
                  type: string
                  required: true
                  default: "auto"
                  enum:
                    - value: "auto"
                      description: "auto"
                    - value: "deconz"
                      description: "deconz"
                    - value: "ezsp"
                      description: "ezsp"
                    - value: "zstack"
                      description: "zstack"
# Include{containerConfig}
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10103
                              required: true
# Include{serviceExpertRoot}
            default: false
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: data
          label: "App Data Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressList}
# Include{security}
# Include{securityContextAdvancedRoot}
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{podSecurityContextRoot}
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: "The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{vpn}
# Include{documentation}
